import imgResult from '../images/A_test_image_result_outline_test5.png'
import { initTest, chooseAnswer } from './tests.js'

// база данных: вопросы и ответы
const stages = [
  {
    question: ['Как вам следует реагировать на разговор в большой компании?'],
    answers: [
      {
        text: 'прервите их и переведите тему разговора в другое русло',
        count: 0
      },
      {
        text: 'прервите их, чтобы немедленно поделиться своими мыслями',
        count: 0
      },
      {
        text: 'слушайте внимательно и вдумчиво отвечайте',
        count: 1
      },
      {
        text: 'подождите паузы, а затем поделитесь своим собственным опытом',
        count: 1
      }
    ]
  },
  {
    question: [
      'Как лучше всего начать разговор с человеком, которого вы только что встретили?'
    ],
    answers: [
      {
        text: 'сразу задавайте личные вопросы для установления связи',
        count: 0
      },
      {
        text: 'поделитесь длинным монологом о своих достижениях',
        count: 0
      },
      {
        text: 'начните беседу с общего разговора о погоде',
        count: 1
      },
      {
        text: 'задавайте неожиданные вопросы, чтобы показать интерес к другому человеку',
        count: 0
      }
    ]
  },
  {
    question: [
      'Что делать во время разговора, если вы не согласны с чьим-то мнением?'
    ],
    answers: [
      {
        text: 'изложите свою точку зрения и вступите в схватку на смерть',
        count: 0
      },
      { text: 'избегайте обсуждения этой темы вообще', count: 0 },
      {
        text: 'настаивайте на своей точке зрения и отвергайте чужую',
        count: 0
      },
      {
        text: 'уважительно выскажите свою позицию и выслушайте собеседника',
        count: 1
      }
    ]
  },
  {
    question: [
      'Как следует справляться с тем, что вас прерывают во время разговора?'
    ],
    answers: [
      { text: 'перебейте его в ответ, да начнется бой', count: 0 },
      {
        text: 'подождите, когда выговоряться, и продолжите свою мысль',
        count: 1
      },
      {
        text: 'дайте человеку выговориться, это всё тянется из детства',
        count: 0
      },
      {
        text: 'укусите того, кто вас перебил',
        count: 0
      }
    ]
  },
  {
    question: [
      'Что считается правильным этикетом разговора при использовании электронных устройств?'
    ],
    answers: [
      {
        text: 'уделите все свое внимание разговору, держа устройства вне поля зрения',
        count: 1
      },
      {
        text: 'выбросите свой телефон в окно на глазах у собеседника',
        count: 0
      },
      {
        text: 'положите устройство на стол, чтобы получать уведомления',
        count: 0
      },
      {
        text: 'постоянно проверяйте сообщения и отвечайте на них во время разговора',
        count: 0
      }
    ]
  }
]

// база данных: результаты
const resultTable = [
  {
    preview: 'Вы&nbsp;прекрасный собеседник!! Рядом с&nbsp;вами приятно находиться!',
    text: 'Вы&nbsp;можете свободно маневрировать в&nbsp;во&nbsp;всех темах для small talk! Наши поздравления: вы&nbsp;практически эксперт в&nbsp;этой области, можете запускать свой курс &laquo;Говорим обо всем и&nbsp;ни&nbsp;о&nbsp;чем: как лить воду с&nbsp;умным видом&raquo;!'
  },
  {
    preview: 'С&nbsp;вами всегда интересно, но&nbsp;вам не&nbsp;хватает базовых знаний!',
    text: 'Вы&nbsp;уже на&nbsp;верном пути, но&nbsp;вам нужно немного лучше узнать о&nbsp;правилах small talk, а&nbsp;так&nbsp;же расширить свой кругохор! Совершенствуйте ваши знания с&nbsp;нами в&nbsp;разделе &laquo;карточки&raquo;, и&nbsp;всё у&nbsp;вас получится!'
  },
  {
    preview: 'Упс! Вы&nbsp;явно хороший человек, но&nbsp;не&nbsp;очень классный собеседник..',
    text: 'Вы&nbsp;на&nbsp;верном пути, однако ваших знаний хватит лишь на&nbsp;то, чтобы поздороваться с&nbsp;кем-то и&nbsp;обсудить сегодняшнюю погоду. Совершенствуйте ваши знания с&nbsp;нами в&nbsp;разделе &laquo;карточки&raquo;, и&nbsp;всё у&nbsp;вас получится!'
  }
]

//функции
document.addEventListener('DOMContentLoaded', () => {
  initTest(stages)
  chooseAnswer(stages, resultTable, imgResult)
})
